#BlueJ class context
comment0.target=Processor
comment0.text=\n\ Processor\ -\ the\ class\ that\ processes\ images.\n\ <p>\n\ This\ class\ manipulated\ Java\ BufferedImages,\ which\ are\ effectively\ 2d\ arrays\ of\ pixels.\ \n\ Each\ pixel\ is\ a\ single\ integer\ packed\ with\ 4\ values\ inside\ it.\ Manipulations\ include,\ but\ are\ not\n\ limited\ to\ changing\ pixel\ colours,\ rotations,\ and\ special\ filters.\ Additionally,\ manipulations\n\ may\ be\ undone\ or\ redone\ as\ needed.\n\ \n\ @author\ Star\ Xie\n\ @version\ December\ 2019\n
comment1.params=bi
comment1.target=greenfoot.GreenfootImage\ blueify(java.awt.image.BufferedImage)
comment1.text=\n\ Example\ colour\ altering\ method\ by\ Mr.\ Cohen.\ This\ method\ will\n\ increase\ the\ blue\ value\ while\ reducing\ the\ red\ and\ green\ values.\n\ \n\ Demonstrates\ use\ of\ packagePixel()\ and\ unpackPixel()\ methods.\n\ \n\ @param\ bi\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\n\ @return\ GreenfootImage\ \ \ The\ new\ altered\ image\ in\ the\ form\ of\ a\ GreenfootImage\ \ \n
comment10.params=bi
comment10.target=greenfoot.GreenfootImage\ greyScale(java.awt.image.BufferedImage)
comment10.text=\n\ Sets\ the\ image\ in\ a\ grey-monotone-like\ filter.\ Takes\ away\ all\ color\ replacing\ it\ with\ shades\n\ \n\ @param\ bi\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ BufferedImage\ that\ will\ be\ darkened\n\ \n\ @return\ GreenfootImage\ \ \ The\ new\ altered\ image\ in\ the\ form\ of\ a\ GreenfootImage\ \ \n
comment11.params=bi
comment11.target=greenfoot.GreenfootImage\ flipHorizontal(java.awt.image.BufferedImage)
comment11.text=\n\ Flips\ original\ image\ horizontally\n\ \n\ @param\ bi\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ BufferedImage\ that\ will\ be\ darkened\n\ \n\ @return\ GreenfootImage\ \ \ The\ new\ altered\ image\ in\ the\ form\ of\ a\ GreenfootImage\ \ \n
comment12.params=bi
comment12.target=greenfoot.GreenfootImage\ flipVertical(java.awt.image.BufferedImage)
comment12.text=\n\ Flips\ original\ image\ vertically\n\ \n\ @param\ bi\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ BufferedImage\ that\ will\ be\ darkened\n\ \n\ @return\ GreenfootImage\ \ \ The\ new\ altered\ image\ in\ the\ form\ of\ a\ GreenfootImage\ \ \n
comment13.params=bi
comment13.target=greenfoot.GreenfootImage\ rotate90(java.awt.image.BufferedImage)
comment13.text=\n\ Rotates\ image\ clockwise\ 90\ degrees\ accordingly\n\ \n\ @param\ bi\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ BufferedImage\ that\ will\ be\ darkened\n\ \n\ @return\ GreenfootImage\ \ \ The\ new\ altered\ image\ in\ the\ form\ of\ a\ GreenfootImage\ \ \n
comment14.params=rgbaValue
comment14.target=int[]\ unpackPixel(int)
comment14.text=\n\ Takes\ in\ an\ rgb\ value\ -\ the\ kind\ that\ is\ returned\ from\ BufferedImage's\n\ getRGB()\ method\ -\ and\ returns\ 4\ integers\ for\ easy\ manipulation.\n\ \n\ By\ Jordan\ Cohen\n\ Version\ 0.2\n\ \n\ @param\ rgbaValue\ The\ value\ of\ a\ single\ pixel\ as\ an\ integer,\ representing<br>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 8\ bits\ for\ red,\ green\ and\ blue\ and\ 8\ bits\ for\ alpha\:<br>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>alpha\ \ \ red\ \ \ \ \ green\ \ \ blue</pre>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>00000000000000000000000000000000</pre>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ @return\ int[4]\ \ \ Array\ containing\ 4\ shorter\ ints<br>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>0\ \ \ \ \ \ \ 1\ \ \ \ \ \ \ 2\ \ \ \ \ \ \ 3</pre>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>alpha\ \ \ red\ \ \ \ \ green\ \ \ blue</pre>\n
comment15.params=r\ g\ b\ a
comment15.target=int\ packagePixel(int,\ int,\ int,\ int)
comment15.text=\n\ Takes\ in\ a\ red,\ green,\ blue\ and\ alpha\ integer\ and\ uses\ bit-shifting\n\ to\ package\ all\ of\ the\ data\ into\ a\ single\ integer.\n\ \n\ By\ Jordan\ Cohen\n\ \n\ @param\ \ \ int\ red\ value\ (0-255)\n\ @param\ \ \ int\ green\ value\ (0-255)\n\ @param\ \ \ int\ blue\ value\ (0-255)\n\ @param\ \ \ int\ alpha\ value\ (0-255)\n\ \n\ @return\ int\ \ Integer\ representing\ 32\ bit\ integer\ pixel\ ready\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ BufferedImage\n
comment16.params=newBi
comment16.target=greenfoot.GreenfootImage\ createGreenfootImageFromBI(java.awt.image.BufferedImage)
comment16.text=\n\ Creates\ a\ GreenfootImage\ from\ a\ BufferedImage\ using\ various\ interior\ greenfoot\ mechanisms\n\ \n\ By\ Jordan\ Cohen\n\ \n\ @param\ bi\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ BufferedImage\ that\ will\ be\ darkened\n\ \n\ @return\ GreenfootImage\ \ \ The\ new\ image\ in\ the\ form\ of\ a\ GreenfootImage\ \n
comment2.params=bi
comment2.target=greenfoot.GreenfootImage\ redify(java.awt.image.BufferedImage)
comment2.text=\n\ Increases\ the\ red\ value\ while\ reducing\ the\ blue\ and\ green\ values.\n\ \n\ Demonstrates\ use\ of\ packagePixel()\ and\ unpackPixel()\ methods.\n\ \n\ @param\ bi\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\n\ \n\ @return\ GreenfootImage\ \ \ The\ new\ altered\ image\ in\ the\ form\ of\ a\ GreenfootImage\ \ \n
comment3.params=bi
comment3.target=greenfoot.GreenfootImage\ greenify(java.awt.image.BufferedImage)
comment3.text=\n\ Increases\ the\ green\ value\ while\ reducing\ the\ red\ and\ blue\ values.\n\ \n\ Demonstrates\ use\ of\ packagePixel()\ and\ unpackPixel()\ methods.\n\ \n\ @param\ bi\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\n\ \n\ @return\ GreenfootImage\ \ \ The\ new\ altered\ image\ in\ the\ form\ of\ a\ GreenfootImage\ \ \n
comment4.params=bi
comment4.target=greenfoot.GreenfootImage\ negativeImage(java.awt.image.BufferedImage)
comment4.text=\n\ Color\ altering\ method\ to\ make\ image\ negative.\ \n\ \n\ @param\ bi\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\n\ \n\ @return\ GreenfootImage\ \ \ The\ new\ altered\ image\ in\ the\ form\ of\ a\ GreenfootImage\ \ \n
comment5.params=bi
comment5.target=greenfoot.GreenfootImage\ warmer(java.awt.image.BufferedImage)
comment5.text=\n\ Color\ altering\ method\ to\ make\ image\ warmer.\ Method\ increases\ the\ red\ while\ \n\ reducing\ the\ green\ and\ blue\ values.\n\ \n\ @param\ bi\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\n\ \n\ @return\ GreenfootImage\ \ \ The\ new\ altered\ image\ in\ the\ form\ of\ a\ GreenfootImage\ \ \n
comment6.params=bi
comment6.target=greenfoot.GreenfootImage\ cooler(java.awt.image.BufferedImage)
comment6.text=\n\ Color\ altering\ method\ to\ make\ image\ colder.\ Method\ increases\ the\ blue\ while\ \n\ decreasing\ green\ and\ red\ values.\n\ \n\ @param\ bi\ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\n\ \n\ @return\ GreenfootImage\ \ \ The\ new\ altered\ image\ in\ the\ form\ of\ a\ GreenfootImage\ \ \n
comment7.params=bi
comment7.target=greenfoot.GreenfootImage\ brighten(java.awt.image.BufferedImage)
comment7.text=\n\ Increases\ the\ brightness\ of\ the\ provided\ BufferedImage\n\ \n\ @param\ bi\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ BufferedImage\ that\ will\ be\ brightened\n\ \n\ @return\ GreenfootImage\ \ \ The\ new\ altered\ image\ in\ the\ form\ of\ a\ GreenfootImage\ \ \n
comment8.params=bi
comment8.target=greenfoot.GreenfootImage\ darken(java.awt.image.BufferedImage)
comment8.text=\n\ Decreases\ the\ brightness\ of\ the\ provided\ BufferedImage\n\ \n\ @param\ bi\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ BufferedImage\ that\ will\ be\ darkened\n\ \n\ @return\ GreenfootImage\ \ \ The\ new\ altered\ image\ in\ the\ form\ of\ a\ GreenfootImage\ \ \n
comment9.params=bi
comment9.target=greenfoot.GreenfootImage\ sepia(java.awt.image.BufferedImage)
comment9.text=\n\ An\ effect\ to\ give\ the\ image\ a\ light\ brown\ -\ brown\ tone.\ \n\ \n\ @author\ Antonio\n\ http\://stackoverflow.com/questions/5132015/how-to-convert-image-to-sepia-in-java\n\ \n\ @param\ bi\ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\n
numComments=17
